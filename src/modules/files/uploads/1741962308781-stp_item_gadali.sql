CREATE OR REPLACE PROCEDURE AD_STP_VALIDA_PRECO_TAB (
    P_NUNOTA NUMBER,
    P_SEQUENCIA NUMBER,
    P_SUCESSO OUT VARCHAR,
    P_MENSAGEM OUT VARCHAR2,
    P_CODUSULIB OUT NUMBER
 
) AS 

V_CODPROD NUMBER;
V_VLRUNIT NUMBER;
V_CODTAB NUMBER;
V_NUTAB NUMBER;
V_DATE  DATE;
V_PRECOBASE NUMBER;
V_CODEMP NUMBER;


BEGIN   

    /*ESTA REGRA DE NEGOCIO TRABALHA JUNTAMENTE COM A PROCEDURE AD_STP_INSERE_LIBERACAO_PRECO*/

    /*CAPTURA INFORMAÇÕES DA NOTA*/
    SELECT AD_CODTAB, DTNEG, CODEMP INTO V_CODTAB,V_DATE,V_CODEMP FROM TGFCAB WHERE NUNOTA  = P_NUNOTA;
    /**/

    /* VALIDA EMPRESA */
    IF V_CODEMP NOT IN (2, 5) THEN
        P_SUCESSO := 'S';
        P_MENSAGEM := 'Empresa não entra na regra.';
        RETURN;
    END IF;

    /*CAPTURA INFORMAÇÕES DO ITEM DA  NOTA*/
    SELECT CODPROD, VLRUNIT INTO V_CODPROD,V_VLRUNIT   FROM TGFITE WHERE NUNOTA = P_NUNOTA AND SEQUENCIA = P_SEQUENCIA;
    /**/


    /*CAPTURA CAPTURA O PREÇO DO PRODUTO NA TABELA*/
    SELECT NVL(MAX(NUTAB),0)
        INTO V_NUTAB 
      FROM TGFTAB WHERE CODTAB = V_CODTAB;
    
    SELECT SNK_GET_PRECO(V_NUTAB, V_CODPROD, V_DATE)
         INTO  V_PRECOBASE 
         FROM DUAL;
    /**/



    IF V_VLRUNIT < V_PRECOBASE THEN
    P_SUCESSO := 'S';
    RETURN;
    ELSE 
    P_SUCESSO := 'S';
    UPDATE TGFITE SET AD_FORATAB = 'S' WHERE NUNOTA = P_NUNOTA AND SEQUENCIA = P_SEQUENCIA; 
    END IF;


EXCEPTION
    WHEN NO_DATA_FOUND THEN
        P_SUCESSO := 'N';
        P_MENSAGEM := 'Dados não encontrados para a nota ou item.';
    WHEN OTHERS THEN
        P_SUCESSO := 'N';
        P_MENSAGEM := 'Erro inesperado: ' || SQLERRM;


END;
--Create Gabriel Toledo /*GTEHC*/

/